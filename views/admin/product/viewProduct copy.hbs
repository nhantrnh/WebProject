<style>
    .product-image {
        width: 150px;
        height: 150px;
        align-items: center;
        justify-items: center;
        align-content: center;
        /*background-color: blue;*/
        padding-bottom: 10px;
    }
        /* Sử dụng CSS Grid để tạo lưới */
        .product-grid {
            display: grid;
            grid-template-rows: repeat(5, 1fr); /* 6 hàng */
            grid-template-columns: repeat(5, 1fr); /* 4 cột */
            gap: 10px; /* Khoảng cách giữa các ô */
        }

        /* CSS cho mỗi sản phẩm */
        .product-item {
            border: 1px solid #ddd;
            padding: 20px;
            text-align: center;
        }
</style>
{{> viewCategory}}

<button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#addProductModal">
    Thêm sản phẩm
</button>

<!-- Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="addProductModalLabel">Thêm sản phẩm</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <form  action="/admin/products" method="post" id="productForm">
                    <div class="mb-3">
                        <label for="inputID" class="form-label">ID</label>
                        <input type="text" class="form-control" id="inputID" name="inputID" placeholder="Nhập ID" required>
                    </div>
                    <div class="mb-3">
                        <label for="inputName" class="form-label">Tên sản phẩm</label>
                        <input type="text" class="form-control" id="inputName" name="inputName"
                            placeholder="Nhập tên sản phẩm" required>
                    </div>
                    <div class="mb-3">
                        <label for="tinyDes" class="form-label">Mô tả ngắn</label>
                        <input type="text" class="form-control" id="tinyDes" name="tinyDes"
                            placeholder="Nhập mô tả ngắn" >
                    </div>
                    <div class="mb-3">
                        <label for="fullDes" class="form-label">Mô tả đầy đủ</label>
                        <textarea class="form-control" id="fullDes" name="fullDes" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="price" class="form-label">Giá</label>
                        <input type="number" class="form-control" id="price" name="price" placeholder="Nhập giá"required>
                    </div>
                    <div class="mb-3">
                        <label for="items" class="form-label">Danh mục</label>
                         <select class="form-select form-select-sm" aria-label="Small select example" id="items" name="items" required>
                            <option value="" style="display:none">Choose an option</option>
                            {{#each categories}}
                                {{#each items}}
                            <option value="{{this.itemID}}">{{this.itemName}}</option>
                            {{/each}}
                            {{/each}}
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="count" class="form-label">Số lượng</label>
                        <input type="number" class="form-control" id="count" name="count" placeholder="Nhập số lượng">
                    </div>
                    <div class="mb-3">
                        <label for="producer" class="form-label">Nhà sản xuất</label>
                        <input type="text" class="form-control" id="producer" name="producer"
                            placeholder="Nhập nhà sản xuất" required>
                    </div>
                    <div>
                        <input type="hidden" id="imageUrl" name="imageUrl">
                        <img id="imagePreview" src="" alt="..."
                            style="display:none; max-width: 200px; max-height: 200px;" />
                    </div>
                    <input name="Image" id="formFile" type="file" class="file" data-preview-file-type="text" required>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        <button class="btn btn-primary btnUpload" >Lưu thay đổi</button>
                    </div>
                </form>

            </div>

        </div>
    </div>
</div>

<div class="product-grid pro d-flex justify-content-evenly flex-wrap">
    {{#each products}}
    <div class="product-item card" style="width: 18rem;margin: 5px;" id="{{this.id}}">
        <div>
             <img src="{{this.images}}"
                class="product-image" style="width: 100px, height: 100px" alt="...">
        </div>
        <div>{{this.name}}</div>
        <div class="card-body">
            <a href="/admin/products/{{this.id}}" class="btn">Xem chi tiết</a>
            <a onclick= "changUrl('{{this.id}}')" data-product-id="{{this.id}}" class="btn delete-product">Xoá</a>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal{{this.id}}">
                Chỉnh sửa
            </button>                        
            <div class="modal fade" id="exampleModal{{this.id}}" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="addProductModalLabel">Chỉnh sửa thông tin sản phẩm</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form  action="/admin/products/{{this.id}}" method="post" id="productForm">
                    <div class="mb-3">
                        <label for="inputID" class="form-label">ID</label>
                        <input type="text" class="form-control" id="inputID" name="inputID1" value="{{this.id}}"placeholder="ID: " readonly>
                    </div>
                    <div class="mb-3">
                        <label for="inputName" class="form-label">Tên sản phẩm</label>
                        <input type="text" class="form-control" id="inputName" name="inputName1" value="{{this.name}}" placeholder="Nhập tên sản phẩm">
                    </div>
                    <div class="mb-3">
                        <label for="tinyDes" class="form-label">Mô tả ngắn</label>
                        <input type="text" class="form-control" id="tinyDes" name="tinyDes1" value="{{this.tinyDes}}" placeholder="Nhập mô tả ngắn" >
                    </div>
                    <div class="mb-3">
                        <label for="fullDes" class="form-label">Mô tả đầy đủ</label>
                        <textarea class="form-control" id="fullDes" name="fullDes1" rows="3" value="{{this.fullDes}}" ></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="price" class="form-label">Giá</label>
                        <input type="number" class="form-control" id="price" name="price1" value="{{this.price}}" placeholder="Nhập giá">
                    </div>
                    <div class="mb-3">
                        <label for="items" class="form-label">Danh mục</label>
                         <select class="form-select form-select-sm" aria-label="Small select example" id="items" name="items1" >
                            <option value="{{this.item}}" style="display:none" selected>Choose an option</option>
                            {{#each ../categories}}
                                {{#each items}}
                            <option value="{{this.itemID}}">{{this.itemName}}</option>
                            {{/each}}
                            {{/each}}
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="count" class="form-label">Số lượng</label>
                        <input class="form-control" id="count" name="count1" value="{{this.count}}" placeholder="Nhập số lượng">
                    </div>
                    <div class="mb-3">
                        <label for="producer" class="form-label">Nhà sản xuất</label>
                        <input type="text" class="form-control" id="producer" name="producer1" value="{{this.producer}}" placeholder="Nhập nhà sản xuất">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        <button class="btn btn-primary" type="submit" >Lưu thay đổi</button>
                    </div>
                </form>

            </div>

        </div>
    </div>
            </div>
        </div>
    </div>
    {{/each}}
</div>
    <div class="pagination w-75 d-flex flex-row justify-content-center align-items-center">
        <button class="btn btn-light previous-page ms-1 me-1" style="width:90px;">Trước</button>
        <input type="number" class="form-control current-page" style="width:60px;" min="1" value="1"> /
        <input type="number" class="form-control max-page" style="width:60px;" value="{{max}}" disabled>
        {{!-- <span class="max-page text-center" style="width:60px;"></span> --}}
        <button class="btn btn-light next-page ms-1 me-1" style="width:90px;">Sau</button>
    </div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    window.onload = function () {
        let url = new URL(window.location.href);
        let params = new URLSearchParams(url.search);

        if (params.has("delete")) {
            params.delete("delete");
            url.search = params.toString();
            window.location.href = url.toString();
        }
    }
    function changUrl(id){
        if (!window.location.href.includes("?")) {
            // Nếu không có dấu "?", thêm nó vào
            window.location.href = window.location.href + '?delete=' + id;
        }
        else window.location.href = window.location.href + '&delete=' + id;
    }
   /* function getDetail(id){
        if (!window.location.href.includes("?")) {
            // Nếu không có dấu "?", thêm nó vào
            window.location.href = window.location.href + '?id=' + id;
        }
        else window.location.href = window.location.href + '&id=' + id;    }*/

  
$(() => {      
  const str = /^(?=\S)(?!.*\s{2,})[a-zA-Z0-9\sáàảãạăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵÁÀẢÃẠĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴ]{5,}(?<=\S)$/;


  const showError = (message) => {
    $(".error.addCatee").text(message);
    $(".error.addCatee").css("visibility", "visible");
  };
  const hideError = () => {
    $(".error.addCatee").text("");
    $(".error.addCatee").css("visibility", "hidden");
  };
  $("#addCate").on("blur", async function(e){
    const value = e.target.value;
    if (!value.match(str)) {
      showError("Tên danh mục phải nhiều hơn 5 ký tự, chỉ chứa chữ và số (nếu có), không có nhiều hơn 1 khoảng trắng giữa các từ, không bắt đầu hay kết thúc bằng khoảng trắng");
    } else {
      hideError();
    }
  });
  $("#addCate").on("focus", async function (e) {
    hideError();
  });
$("#addCate").on("mouseout", async function (e) {
    hideError();
  });


  
  const showError1 = (message) => {
    $(".error.newIDD").text(message);
    $(".error.newIDD").css("visibility", "visible");
  };
  const hideError1 = () => {
    $(".error.newIDD").text("");
    $(".error.newIDD").css("visibility", "hidden");
  };
  $("#newID").on("blur", async function(e){
    const value = e.target.value;
    if (!value.match(/^[A-Z]{3}$/)) {
      showError1("Mã danh mục con chỉ chứa 3 ký tự và chỉ có chữ in hoa");
    } else {
      hideError1();
    }
  });


  $("#newID").on("focus", async function (e) {
    hideError1();
});


    const showError2 = (message) => {
    $(".error.newNameItemm").text(message);
    $(".error.newNameItemm").css("visibility", "visible");
  };
  const hideError2 = () => {
    $(".error.newNameItemm").text("");
    $(".error.newNameItemm").css("visibility", "hidden");
  };
  $("#newNameItem").on("blur", async function(e){
    const value = e.target.value;
    if (!value.match(str)) {
      showError2("Tên danh mục phải nhiều hơn 5 ký tự, chỉ chứa chữ và số (nếu có), không có nhiều hơn 1 khoảng trắng giữa các từ, không bắt đầu hay kết thúc bằng khoảng trắng");
    } else {
      hideError2();
    }
  });

  $("#newNameItem").on("focus", async function (e) {
    hideError2();
});


  const showError3 = (message) => {
    $(".error.catItemIDD").text(message);
    $(".error.catItemIDD").css("visibility", "visible");
  };
  const hideError3 = () => {
    $(".error.catItemIDD").text("");
    $(".error.catItemIDD").css("visibility", "hidden");
  };
  $("#catItemID").on("blur", async function(e){
    const value = e.target.value;
    const selectedValue = $("#catItemID").val(); 
    if (!value.match(/^.+$/)) {
      showError3("Vui lòng chọn danh mục");
    } else {
      hideError3();
    }
  });

  $("#catItemID").on("focus", async function (e) {
    hideError3();
  });


const showError4 = (message) => {
    $(".error.changeNamee").text(message);
    $(".error.changeNamee").css("visibility", "visible");
  };
  const hideError4 = () => {
    $(".error.changeNamee").text("");
    $(".error.changeNamee").css("visibility", "hidden");
  };

document.querySelector('.changee').addEventListener('blur', async function (e) {
    const value = e.target.value;
    if (!value.match(str)) {
      showError4("Tên danh mục phải nhiều hơn 5 ký tự, chỉ chứa chữ và số (nếu có), không có nhiều hơn 1 khoảng trắng giữa các từ, không bắt đầu hay kết thúc bằng khoảng trắng");
    } else {
      hideError4();
    }

});

document.querySelector('.changee').addEventListener('focus', function (event) {
    hideError4();
  });


const showError5 = (message) => {
    $(".error.newCatNamee").text(message);
    $(".error.newCatNamee").css("visibility", "visible");
  };
  const hideError5 = () => {
    $(".error.newCatNamee").text("");
    $(".error.newCatNamee").css("visibility", "hidden");
  };

document.querySelector('.catChangee').addEventListener('blur', async function (e) {
    const value = e.target.value;
    if (!value.match(str)) {
      showError5("Tên danh mục phải nhiều hơn 5 ký tự, chỉ chứa chữ và số (nếu có), không có nhiều hơn 1 khoảng trắng giữa các từ, không bắt đầu hay kết thúc bằng khoảng trắng");
    } else {
      hideError5();
    }

});

document.querySelector('.catChangee').addEventListener('focus', function (event) {
    hideError5();
  });

});

function handleDelete(event, CatID) {
    event.preventDefault();
    let url = new URL(window.location.href);
    url.search = "";
    let params = new URLSearchParams(url.search);
    params.set("delete", CatID);        
    url.search = params.toString();
    window.location.href = url.toString();
}

function handleDeleteItem(event, ItemID){
    event.preventDefault();
    let url = new URL(window.location.href);
    url.search = "";
    
    let params = new URLSearchParams(url.search);

    params.set("deleteItem", ItemID);
    url.search = params.toString();

    //console.log(url)
    window.location.href = url.toString();
}
function validateEdit(catID){
    let itemNamenew = document.getElementById("Cat" + catID).value;
    if (!itemNamenew.match(/^(?=\S)(?!.*\s{2,})[a-zA-Z0-9\sáàảãạăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵÁÀẢÃẠĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴ]{5,}(?<=\S)$/)){
        return false;
    }
    return true;
}
function handleEdit(event, CatID) {
    if (validateEdit(CatID)){
        event.preventDefault();
        let CatName = document.getElementById("Cat" + CatID).value;
        let url = new URL(window.location.href);
        url.search = "";
        let params = new URLSearchParams(url.search);
        params.set("edit", CatID);
        params.set("catName", CatName);
        url.search = params.toString();
        window.location.href = url.toString();
    }    
}
function validateEditItem(itemID){
    let itemNamenew = document.getElementById("Name" + itemID).value;
    if (!itemNamenew.match(/^(?=\S)(?!.*\s{2,})[a-zA-Z0-9\sáàảãạăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵÁÀẢÃẠĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴ]{5,}(?<=\S)$/)){
        return false;
    }
    return true;
}
function handleEditItem(event, itemID) {
    if (validateEditItem(itemID)){
    event.preventDefault();
    let itemNamenew = document.getElementById("Name" + itemID).value;
    let itemType = document.getElementById("select"+ itemID).value;
    let url = new URL(window.location.href);
    url.search = "";
    let params = new URLSearchParams(url.search);
    params.set("editItem", itemID);
    params.set("itemName", itemNamenew);
    params.set("catID", itemType);        
    
    url.search = params.toString();
    //console.log(url)
    window.location.href = url.toString();
    }    
}

function validateSubcategory() {
   /* const idValue = $("#newID").val();
    const nameValue = $("#newNameItem").val();
    const selectedCategory = $("#catItemID").val();
    const value = e.target.value;*/
    let idValue = document.getElementById("newID").value;
    let nameValue = document.getElementById("newNameItem").value;
    let selectedCategory = document.getElementById("catItemID").value;

    if (!idValue.match(/^[A-Z]{3}$/)) {
        return false;
    };
    if (!nameValue.match(/^(?=\S)(?!.*\s{2,})[a-zA-Z0-9\sáàảãạăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵÁÀẢÃẠĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴ]{5,}(?<=\S)$/)){
        return false;
    };

    // Kiểm tra danh mục đã chọn
    if (!selectedCategory.match(/^.+$/)) {
        return false;
    };

    return true;
}

function handleAddItem(event) {
  if (validateSubcategory()){
    event.preventDefault();
    let itemName = document.getElementById("newNameItem").value;
    let itemID = document.getElementById("newID").value;
    let catID = document.getElementById("catItemID").value;
    let url = new URL(window.location.href);
    url.search = "";
    let params = new URLSearchParams(url.search);
    params.set("addtoID", catID);
    params.set("itemID", itemID);
    params.set("itemName", itemName);        
    
    url.search = params.toString();
    //console.log(url)
    window.location.href = url.toString();
  }
}
function validateCategoryName() {
  var categoryNameInput = document.getElementById('addCate');
  var categoryName = categoryNameInput.value.trim();
  if (!categoryName.match(/^(?=\S)(?!.*\s{2,})[a-zA-Z0-9\sáàảãạăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵÁÀẢÃẠĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴ]{5,}(?<=\S)$/)) {
      return false; 
  }
  return true; 
}

function handleAdd(event) {
    if (validateCategoryName()) {
    event.preventDefault(); 
    let CatName = document.getElementById("addCate").value;
    let url = new URL(window.location.href);
    url.search = "";
    
    let params = new URLSearchParams(url.search);

    params.set("add", CatName);
    url.search = params.toString();

    //console.log(url)
    window.location.href = url.toString();
  }
}
let currentPage = 1;
const perPage = 20;
let maxPage = 1;
function updateTable() {
        fetch(`/admin/products/page?page=${currentPage}&perPage=${perPage}`)
            .then(response => response.json())
            .then(data => {
                    $('.pro').html('');
                    data.pros.forEach(product => {
                        let productHTML = `
             <div class="product-item card" style="width: 18rem;margin: 5px;" id="${product.id}">
        <div>
             <img src="${product.images}"
                class="product-image" style="width: 100px, height: 100px" alt="...">
        </div>
        <div>${product.name}</div>
        <div class="card-body">
            <a href="/admin/products/${product.id}" class="btn">Xem chi tiết</a>
            <a onclick= "changUrl('${product.id}')" data-product-id="${product.id}" class="btn delete-product">Xoá</a>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal${product.id}">
                Chỉnh sửa
            </button>                        
            <div class="modal fade" id="exampleModal${product.id}" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="addProductModalLabel">Chỉnh sửa thông tin sản phẩm</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form  action="/admin/products/${product.id}" method="post" id="productForm">
                    <div class="mb-3">
                        <label for="inputID" class="form-label">ID</label>
                        <input type="text" class="form-control" id="inputID" name="inputID1" value="${product.id}"placeholder="ID: " readonly>
                    </div>
                    <div class="mb-3">
                        <label for="inputName" class="form-label">Tên sản phẩm</label>
                        <input type="text" class="form-control" id="inputName" name="inputName1" value="${product.name}" placeholder="Nhập tên sản phẩm">
                    </div>
                    <div class="mb-3">
                        <label for="tinyDes" class="form-label">Mô tả ngắn</label>
                        <input type="text" class="form-control" id="tinyDes" name="tinyDes1" value="${product.tinyDes}" placeholder="Nhập mô tả ngắn" >
                    </div>
                    <div class="mb-3">
                        <label for="fullDes" class="form-label">Mô tả đầy đủ</label>
                        <textarea class="form-control" id="fullDes" name="fullDes1" rows="3" value="${product.fullDes}" ></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="price" class="form-label">Giá</label>
                        <input type="number" class="form-control" id="price" name="price1" value="${product.price}" placeholder="Nhập giá">
                    </div>
                    <div class="mb-3">
                        <label for="items" class="form-label">Danh mục</label>
                         <select class="form-select form-select-sm" aria-label="Small select example" id="items" name="items1" >
                            <option value="${product.item}" style="display:none" selected>Choose an option</option>
                            ${data.proList.map(item => `
                            <option value="${item.itemID}">${item.itemName}</option>
                        `).join('')}
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="count" class="form-label">Số lượng</label>
                        <input class="form-control" id="count" name="count1" value="${product.count}" placeholder="Nhập số lượng">
                    </div>
                    <div class="mb-3">
                        <label for="producer" class="form-label">Nhà sản xuất</label>
                        <input type="text" class="form-control" id="producer" name="producer1" value="${product.producer}" placeholder="Nhập nhà sản xuất">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        <button class="btn btn-primary" type="submit" >Lưu thay đổi</button>
                    </div>
                </form>

            </div>

        </div>
    </div>`;
                        $('.pro').append(productHTML);
                    });
                      maxPage = data.maxPage;
                document.querySelector('.current-page').value = currentPage;
                document.querySelector('.max-page').value = data.maxPage;
                })
                .catch(error => {
                    console.error(error);
                });

        }
updateTable();

document.querySelector('.previous-page').addEventListener('click', () => {
    if (currentPage > 1) {
        currentPage--;
        updateTable();
    }
});
document.querySelector('.next-page').addEventListener('click', () => {
    if (currentPage < maxPage) {
        currentPage++;
        updateTable();
    }
});
document.querySelector('.go-page').addEventListener('click', () => {
    const inputPage = parseInt(document.querySelector('.current-page').value);
    console.log(maxPage);
    if (!isNaN(inputPage) && inputPage >= 1 && inputPage <= maxPage) {
        currentPage = inputPage;
        updateTable();
    }
    else if (inputPage < 1) {
        document.querySelector('.current-page').value = 1;
        currentPage = 1;
        updateTable();
    }
    else if (inputPage > maxPage) {
        document.querySelector('.current-page').value = maxPage;
        currentPage = maxPage;
        updateTable();
    }
});
$('.current-page').on('change', function () {
    const inputPage = parseInt(document.querySelector('.current-page').value);
    console.log(maxPage);
    if (!isNaN(inputPage) && inputPage >= 1 && inputPage <= maxPage) {
        currentPage = inputPage;
        updateTable();
    }
    else if (inputPage < 1) {
        document.querySelector('.current-page').value = 1;
        currentPage = 1;
        updateTable();
    }
    else if (inputPage > maxPage) {
        document.querySelector('.current-page').value = maxPage;
        currentPage = maxPage;
        updateTable();
    }
});
function toggleSubcategories(button) {
// Lấy phần tử chứa danh sách danh mục con tương ứng
    var subcategoriesList = button.nextElementSibling;

    // Kiểm tra hiển thị hoặc ẩn phần tử chứa danh sách
    if (subcategoriesList.style.display === 'none') {
        subcategoriesList.style.display = 'block';
    } else {
        subcategoriesList.style.display = 'none';
    }
}

</script>